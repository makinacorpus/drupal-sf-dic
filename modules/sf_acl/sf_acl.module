<?php
/**
 * @file
 * Simple makinacorpus/php-acl integration
 */

use MakinaCorpus\Drupal\Sf\EventDispatcher\NodeAccessEvent;
use MakinaCorpus\Drupal\Sf\EventDispatcher\NodeAccessGrantEvent;
use MakinaCorpus\Drupal\Sf\EventDispatcher\NodeAccessRecordEvent;

/**
 * Implements hook_node_access().
 */
function sf_acl_node_access($node, $op, $account) {
  $event = new NodeAccessEvent($node, $account, $op);
  \Drupal::service('event_dispatcher')->dispatch(NodeAccessEvent::EVENT_NODE_ACCESS, $event);
  return $event->getResult();
}

/**
 * Implements hook_node_access_records().
 */
function sf_acl_node_access_records($node) {
  $event = new NodeAccessRecordEvent($node);
  \Drupal::service('event_dispatcher')->dispatch(NodeAccessRecordEvent::EVENT_NODE_ACCESS_RECORD, $event);
  return $event->toDrupalGrantList();
}

/**
 * Empty implementation of hook_node_grants().
 */
function sf_acl_node_grants($account, $op) {
  // @todo This is a duplicate with the event throw within NodeAccessSubscriber
  //   so it needs to go through a cache somehow
  $event = new NodeAccessGrantEvent($account, $op);
  \Drupal::service('event_dispatcher')->dispatch(NodeAccessGrantEvent::EVENT_NODE_ACCESS_GRANT, $event);
  return $event->getResult();
}
